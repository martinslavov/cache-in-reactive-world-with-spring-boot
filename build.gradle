plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.reactive'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

ext {
	jacksonVersion = '2.14.2'
	springdocOpenPIWebFluxVersion = '2.0.2'
	testContainerVersion = '1.17.6'
}

configurations {
	all {
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-webflux"
	implementation "org.springframework.boot:spring-boot-starter-data-r2dbc"
	implementation "org.springframework.boot:spring-boot-starter-log4j2"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	implementation "org.springframework.boot:spring-boot-starter-cache"
	implementation "org.springframework.boot:spring-boot-starter-data-redis-reactive"
	implementation "com.github.ben-manes.caffeine:caffeine:3.1.3"
	implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
	implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
	implementation "io.projectreactor.addons:reactor-extra:3.5.0"
	implementation "org.springdoc:springdoc-openapi-starter-webflux-api:${springdocOpenPIWebFluxVersion}"
	implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:${springdocOpenPIWebFluxVersion}"
	runtimeOnly "io.micrometer:micrometer-registry-prometheus"
	runtimeOnly "org.postgresql:r2dbc-postgresql:1.0.1.RELEASE"
	runtimeOnly "org.postgresql:postgresql"

	// Test
	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "io.projectreactor:reactor-test"
	testImplementation "org.testcontainers:testcontainers:${testContainerVersion}"
	testImplementation "org.testcontainers:r2dbc:${testContainerVersion}"
	testImplementation "org.testcontainers:postgresql:${testContainerVersion}"
	// testImplementation "org.testcontainers:junit-jupiter:${testContainerVersion}"

}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs << '-Xlint:-deprecation'
}
